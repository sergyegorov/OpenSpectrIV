/*
 * The MIT License
 *
 * Copyright 2014 root.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

package os4.task;

import java.awt.Dimension;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JPanel;
import os4.Common;
import os4.Mls;
import os4.OS4ExceptionPermision;

/**
 *
 * @author root
 */
public class TaskLogin extends javax.swing.JPanel implements AbstractTask{
    private static final Logger Log = Common.getLogger( TaskLogin.class ); 
    /**
     * Creates new form TaskLogin
     */
    public TaskLogin() {
        initComponents();
        Mls.translate(this);
        
        Image image = null;
        try {
            image = ImageIO.read(new File("lg.png"));
            lbImage.setIcon(new ImageIcon(image));
        } catch (IOException e) {
        }
        Dimension d = new Dimension(800,460);
        setMinimumSize(d);
        setPreferredSize(d);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jbLoginMeasuring = new javax.swing.JButton();
        jbLoginMethod = new javax.swing.JButton();
        jlLoginSetup = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        lbImage = new javax.swing.JLabel();

        jLabel1.setText("Выберите вид работы");

        jbLoginMeasuring.setText("Измерение неизвестных проб");
        jbLoginMeasuring.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLoginMeasuringActionPerformed(evt);
            }
        });

        jbLoginMethod.setText("Создание и редактирование методики");
        jbLoginMethod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLoginMethodActionPerformed(evt);
            }
        });

        jlLoginSetup.setForeground(javax.swing.UIManager.getDefaults().getColor("Button.disabledForeground"));
        jlLoginSetup.setText("настройка...");
        jlLoginSetup.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlLoginSetupMouseClicked(evt);
            }
        });

        lbImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbImage, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(jbLoginMeasuring, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jbLoginMethod, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE)
                            .addComponent(jlLoginSetup, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbLoginMeasuring, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbLoginMethod)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                        .addComponent(jlLoginSetup))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void showNext() throws OS4ExceptionPermision{
        Common.MainWindow.setExtendedState( Common.MainWindow.getExtendedState()|
                JFrame.MAXIMIZED_BOTH );
        Common.MainWindow.ShowTask(new TaskHardCheck());
    }
    
    private void jlLoginSetupMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlLoginSetupMouseClicked
        try{
            Common.UserLevel = Common.USER_LEVEL_SETUP;
            showNext();
        } catch(Exception ex){
            Log.log(Level.SEVERE,"Login as setup",ex);
        }
    }//GEN-LAST:event_jlLoginSetupMouseClicked

    private void jbLoginMeasuringActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLoginMeasuringActionPerformed
        try{
            Common.UserLevel = Common.USER_LEVEL_LABORANT;
            showNext();
        } catch(Exception ex){
            Log.log(Level.SEVERE,"Login as laborant",ex);
        }
    }//GEN-LAST:event_jbLoginMeasuringActionPerformed

    private void jbLoginMethodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLoginMethodActionPerformed
        try{
            Common.UserLevel = Common.USER_LEVEL_METHODIST;
            showNext();
        } catch(Exception ex){
            Log.log(Level.SEVERE,"Login as methodist",ex);
        }
    }//GEN-LAST:event_jbLoginMethodActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton jbLoginMeasuring;
    private javax.swing.JButton jbLoginMethod;
    private javax.swing.JLabel jlLoginSetup;
    private javax.swing.JLabel lbImage;
    // End of variables declaration//GEN-END:variables

    @Override
    public int GetUserLevel() {
        return Common.USER_LEVEL_LABORANT;
    }

    @Override
    public JPanel open() {
        return this;//throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void close() {
        //throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public String getGUIName() {
        return Mls.get("Вход в программу");
    }

    @Override
    public File getFile(String name) {
        throw new UnsupportedOperationException("Not supported yet.");
    }
}
