/*
 * The MIT License
 *
 * Copyright 2014 root.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

package os4.task;

import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JPanel;
import os4.Common;
import os4.Mls;

/**
 *
 * @author root
 */
public class TaskMainFunctionSelector extends javax.swing.JPanel implements AbstractTask {
    private static final Logger Log = Common.getLogger( TaskMainFunctionSelector.class );
    /**
     * Creates new form TaskMainFunctionSelector
     */
    public TaskMainFunctionSelector() {
        initComponents();
        Mls.translate(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jbQAnalize = new javax.swing.JButton();
        jbCalcAnalize = new javax.swing.JButton();
        jbCaclMethodEditor = new javax.swing.JButton();
        jbConTableEditor = new javax.swing.JButton();
        jbQMethodEditor = new javax.swing.JButton();
        jbLyEditor = new javax.swing.JButton();
        jbSetup = new javax.swing.JButton();

        jPanel1.setLayout(new java.awt.GridLayout(5, 3, 20, 20));

        jbQAnalize.setText("<html>Качественны анализ</html>");
        jbQAnalize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbQAnalizeActionPerformed(evt);
            }
        });
        jPanel1.add(jbQAnalize);

        jbCalcAnalize.setText("<html>Количественный анализ</html>");
        jPanel1.add(jbCalcAnalize);

        jbCaclMethodEditor.setText("<html>Создание или редактирование методики количественного анализа<html>");
        jbCaclMethodEditor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCaclMethodEditorActionPerformed(evt);
            }
        });
        jPanel1.add(jbCaclMethodEditor);

        jbConTableEditor.setText("<html>Ввод данных по имеющимся стандартным образцам</html>");
        jbConTableEditor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbConTableEditorActionPerformed(evt);
            }
        });
        jPanel1.add(jbConTableEditor);

        jbQMethodEditor.setText("<html>Калибровка качественного анализа</html>");
        jPanel1.add(jbQMethodEditor);

        jbLyEditor.setText("<html>Настройка шкалы длин волн</html>");
        jbLyEditor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLyEditorActionPerformed(evt);
            }
        });
        jPanel1.add(jbLyEditor);

        jbSetup.setText("<html>Настройка программы</html>");
        jbSetup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSetupActionPerformed(evt);
            }
        });
        jPanel1.add(jbSetup);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 853, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jbSetupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSetupActionPerformed
        try{
            Common.MainWindow.ShowTask(new TaskSetup());
        }catch(Exception ex){
            Log.log(Level.SEVERE,"Setup open error: ",ex);
        }
    }//GEN-LAST:event_jbSetupActionPerformed

    private void jbQAnalizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbQAnalizeActionPerformed
        try{
            Common.MainWindow.ShowTask(new TaskSorting());
        }catch(Exception ex){
            Log.log(Level.SEVERE,"Sorting open error: ",ex);
        }
    }//GEN-LAST:event_jbQAnalizeActionPerformed

    private void jbLyEditorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLyEditorActionPerformed
        try{
            Common.MainWindow.ShowTask(new TaskLinking());
        }catch(Exception ex){
            Log.log(Level.SEVERE,"Linking open error: ",ex);
        }
    }//GEN-LAST:event_jbLyEditorActionPerformed

    private void jbCaclMethodEditorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCaclMethodEditorActionPerformed
        try{
            Common.MainWindow.ShowTask(new TaskMethodSelector());
        }catch(Exception ex){
            Log.log(Level.SEVERE,"Method edit error: ",ex);
        }
    }//GEN-LAST:event_jbCaclMethodEditorActionPerformed

    private void jbConTableEditorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbConTableEditorActionPerformed
        try{
            Common.MainWindow.ShowTask(Common.ProbLib);
        }catch(Exception ex){
            Log.log(Level.SEVERE,"Prob lib error: ",ex);
        }
    }//GEN-LAST:event_jbConTableEditorActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton jbCaclMethodEditor;
    private javax.swing.JButton jbCalcAnalize;
    private javax.swing.JButton jbConTableEditor;
    private javax.swing.JButton jbLyEditor;
    private javax.swing.JButton jbQAnalize;
    private javax.swing.JButton jbQMethodEditor;
    private javax.swing.JButton jbSetup;
    // End of variables declaration//GEN-END:variables

    @Override
    public int GetUserLevel() {
        return Common.USER_LEVEL_LABORANT;
    }

    @Override
    public String getGUIName() {
        return Mls.get("Выбор функций");
    }

    @Override
    public JPanel open() {
        return this;
    }

    @Override
    public void close() {
        
    }

    @Override
    public File getFile(String name) {
        throw new UnsupportedOperationException("Not supported yet.");
    }
}
