/*
 * The MIT License
 *
 * Copyright 2014 root.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package os4.task.comp;

import java.awt.BorderLayout;
import java.util.logging.Level;
import java.util.logging.Logger;

import os4.Common;
import os4.task.TaskProbLib;

/**
 *
 * @author root
 */
public class ProbLibSelector extends javax.swing.JDialog {
    final static Logger Log = Common.getLogger(ProbLibSelector.class);
    TaskProbLib ProbLib;
    /**
     * Creates new form ProbLibSelector
     */
    public ProbLibSelector() {
        super(Common.MainWindow, true);
        initComponents();
        ProbLib = new TaskProbLib();
        jpProbLibPanel.add(ProbLib.open(),BorderLayout.CENTER);
        setSize(800, 600);
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jbSelect = new javax.swing.JButton();
        jpProbLibPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jbSelect.setText("Выбрать");
        jbSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSelectActionPerformed(evt);
            }
        });

        jpProbLibPanel.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 676, Short.MAX_VALUE)
                .addComponent(jbSelect))
            .addComponent(jpProbLibPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jpProbLibPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbSelect))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public String SelectedComplect;
    public String SelectedProb;
    private void jbSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSelectActionPerformed
        try{
            SelectedComplect = ProbLib.SelectedPath;
            if(SelectedComplect != null && ProbLib.SelectedEditor != null)
                SelectedProb = ProbLib.SelectedEditor.SelectedRowName;
            else {
                SelectedComplect = null;
                SelectedProb = null;
            }
            setVisible(false);
        }catch(Exception ex){
            Log.log(Level.SEVERE, "Selecting error...", ex);
        }
    }//GEN-LAST:event_jbSelectActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbSelect;
    private javax.swing.JPanel jpProbLibPanel;
    // End of variables declaration//GEN-END:variables
}
